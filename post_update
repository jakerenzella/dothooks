#!/usr/bin/env bash
set -e

here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $here/lib

cd $here
git submodule update --init --recursive

links_to_current_home() {
    [[ $(readlink $1) =~ ^$here/current/home/ ]]
}

not_even_a_link() {
    [ ! \( -L $1 -o -e $1 \) ]
}

setup_staging_home() {
    cleanDir $here/staging/home
    find $here/staging/sources/*/hooks/post_update.d/ -type f | perl -e 'print sort{($p=$a)=~s!.*/!!;($q=$b)=~s!.*/!!;$p cmp$q}<>' | xargs -I {} bash -c "$here/runHookd {} || exit 255"
}

check_links() {
    pushd_ $here/staging/home
        find . -mindepth 1 | sed 's/^\.\///' > $here/staging/manifest
    popd_
    while read f; do
        if [ -d $here/staging/home/$f ]; then
            if ! (not_even_a_link ~/$f || [ -d ~/$f ]); then
                errol "~/$f exists and is not a directory"
                exit 1
            fi
        else
            if ! (not_even_a_link ~/$f || links_to_current_home ~/$f); then
                errol "~/$f exists and is not a symlink into $here"
                exit 1
            fi
        fi
    done < $here/staging/manifest
}

flip_current() {
    if [ -e $here/current ]; then
        rm -rf $here/old
        mv $here/current $here/old
    fi
    mv $here/staging $here/current
}

setup_links() {
    while read f; do
        if [ -d $here/current/home/$f ]; then
            mkdir -p
        else
            ln -sf $here/current/home/$f ~/$f
        fi
    done < $here/current/manifest
    if [ -e $here/old ]; then
        while read f; do
            if [ -d $here/old/$f ]; then
                if [ $(find ~/$f -maxdepth 0 -type d -empty 2>/dev/null) ]; then
                    rmdir ~/$f
                fi
            else
                if [ -L ~/$f ] && links_to_current_home ~/$f && [ ! -e ~/$f ]; then
                    info "Cleaning up ~/$f"
                    rm ~/$f
                fi
            fi
        done < $here/old/manifest
    fi
    # TODO: cleanup
}

setup_staging_home
check_links
flip_current
setup_links

if [ -e ~/.bashrc ]; then
    sed -i '/#DOTFILES_MANAGED$/ d' ~/.bashrc
fi
echo "source $here/newshell.bash #DOTFILES_MANAGED" >> ~/.bashrc

info "Updated"
