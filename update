#!/usr/bin/env bash
set -eu

root="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $root/lib/default
source $root/config

if (( ($(date +%s) - $(fileModifiedUnixTime $root/updated || echo 0)) < $DOTFILES_UPDATE_EVERY )); then
    exit 0 # No need to go any further
fi

info "(Checking for dotfiles updates...)"

needs_update=""

prep_staging() {
    cleanDir $root/staging
    cp -R $root/current/sources $root/staging/sources
    for d in $root/staging/sources/*; do
        pushd_ $d
            if gitBehindRemote; then
                needs_update="yes"
                # Don't break because we want to fetch all remotes
            fi
        popd_
    done
    if [[ $needs_update ]]; then
        for d in $root/staging/sources/*; do
            pushd_ $d
                git reset --hard @{u}
            popd_
        done
    fi
}

attempt_update() {
    local cmd="true"
    if [[ $needs_update == "root" ]]; then
        cmd="git reset --hard @{u}"
    fi

    oldrev=$(git rev-parse HEAD)
    if ! ($cmd && $root/post_update); then
        errol "Updating failed."
        git reset --hard $oldrev
    fi
}

pushd_ $root
    prep_staging
    if gitBehindRemote; then
        needs_update="root"
    fi
    if [[ $needs_update ]]; then
        attempt_update
    else
        info "(You're sweet)"
    fi
popd_

touch $root/updated
